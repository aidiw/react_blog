{"ast":null,"code":"var _jsxFileName = \"/Users/mj/Documents/GitHub/react_blog/src/pages/ShowPage.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // routes의 id이기때문에 맞춰줘야함\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const getPost = id => {\n    axios.get(`http://localhost:3009/posts/${id}`).then(res => {\n      setPost(res.data);\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    getPost(id);\n  }, [id]);\n  const printDate = timestamp => {\n    return new Date(timestamp).toLocaleString();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"text-muted\",\n      children: [\"created at: \", printDate(post.createdAt)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ShowPage, \"Fv9BEdyPenrQt++fFGM+AtYcsg8=\", false, function () {\n  return [useParams];\n});\n_c = ShowPage;\nexport default ShowPage;\nvar _c;\n$RefreshReg$(_c, \"ShowPage\");","map":{"version":3,"names":["useNavigate","useParams","axios","useEffect","useState","LoadingSpinner","Link","jsxDEV","_jsxDEV","ShowPage","_s","id","post","setPost","loading","setLoading","getPost","get","then","res","data","printDate","timestamp","Date","toLocaleString","fileName","_jsxFileName","lineNumber","columnNumber","children","className","title","createdAt","body","_c","$RefreshReg$"],"sources":["/Users/mj/Documents/GitHub/react_blog/src/pages/ShowPage.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport { Link } from \"react-router-dom\";\n\nconst ShowPage = () => {\n    const {id} = useParams(); // routes의 id이기때문에 맞춰줘야함\n    const [post, setPost] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    const getPost = (id) => {\n        axios.get(`http://localhost:3009/posts/${id}`).then((res) => {\n            setPost(res.data)\n            setLoading(false)\n        })\n    };\n\n    useEffect (() => {\n        getPost(id)\n    }, [id])\n\n    const printDate = (timestamp) => {\n        return new Date(timestamp).toLocaleString();\n    }\n\n    if (loading) {\n        return <LoadingSpinner/>\n    }\n\n    return (\n        <div>\n            <div className=\"d-flex\">\n                <h1>{post.title}</h1>\n\n            </div>\n            <small className=\"text-muted\">\n             created at: {printDate(post.createdAt)}\n            </small>\n            <hr/>\n            <p>{post.body}</p>\n        </div>\n    );\n}\n\nexport default ShowPage;"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAACC;EAAE,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;EAC1B,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,OAAO,GAAIL,EAAE,IAAK;IACpBT,KAAK,CAACe,GAAG,CAAE,+BAA8BN,EAAG,EAAC,CAAC,CAACO,IAAI,CAAEC,GAAG,IAAK;MACzDN,OAAO,CAACM,GAAG,CAACC,IAAI,CAAC;MACjBL,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAEDZ,SAAS,CAAE,MAAM;IACba,OAAO,CAACL,EAAE,CAAC;EACf,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EAER,MAAMU,SAAS,GAAIC,SAAS,IAAK;IAC7B,OAAO,IAAIC,IAAI,CAACD,SAAS,CAAC,CAACE,cAAc,CAAC,CAAC;EAC/C,CAAC;EAED,IAAIV,OAAO,EAAE;IACT,oBAAON,OAAA,CAACH,cAAc;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC5B;EAEA,oBACIpB,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAKsB,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACnBrB,OAAA;QAAAqB,QAAA,EAAKjB,IAAI,CAACmB;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpB,CAAC,eACNpB,OAAA;MAAOsB,SAAS,EAAC,YAAY;MAAAD,QAAA,GAAC,cACjB,EAACR,SAAS,CAACT,IAAI,CAACoB,SAAS,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACRpB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLpB,OAAA;MAAAqB,QAAA,EAAIjB,IAAI,CAACqB;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd,CAAC;AAAAlB,EAAA,CArCKD,QAAQ;EAAA,QACGR,SAAS;AAAA;AAAAiC,EAAA,GADpBzB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}