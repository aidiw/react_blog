{"ast":null,"code":"import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import NavBar from'./components/NavBar';import routes from'./routes';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(Routes,{children:routes.map(route=>{return/*#__PURE__*/_jsx(Route,{path:route.path,Component:route.component},route.path);})})})]})});}export default App;","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","NavBar","routes","jsx","_jsx","jsxs","_jsxs","App","children","className","map","route","path","Component","component"],"sources":["/Users/mj/Documents/GitHub/react_blog/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\nimport routes from './routes';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <div className=\"container\">\n          <Routes>\n            {routes.map((route) => {\n              return (\n                <Route\n                  key={route.path}\n                  path={route.path}\n                  Component={route.component}\n                />\n              );\n            })}\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,OAASA,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAEzE,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,mBACEH,IAAA,CAACN,MAAM,EAAAU,QAAA,cACLF,KAAA,QAAAE,QAAA,eACEJ,IAAA,CAACH,MAAM,GAAE,CAAC,cACVG,IAAA,QAAKK,SAAS,CAAC,WAAW,CAAAD,QAAA,cACxBJ,IAAA,CAACL,MAAM,EAAAS,QAAA,CACJN,MAAM,CAACQ,GAAG,CAAEC,KAAK,EAAK,CACrB,mBACEP,IAAA,CAACJ,KAAK,EAEJY,IAAI,CAAED,KAAK,CAACC,IAAK,CACjBC,SAAS,CAAEF,KAAK,CAACG,SAAU,EAFtBH,KAAK,CAACC,IAGZ,CAAC,CAEN,CAAC,CAAC,CACI,CAAC,CACN,CAAC,EACH,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}