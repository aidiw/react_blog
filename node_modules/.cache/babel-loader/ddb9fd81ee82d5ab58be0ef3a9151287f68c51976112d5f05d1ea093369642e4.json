{"ast":null,"code":"var _jsxFileName = \"/Users/mj/Documents/GitHub/react_blog/src/components/BlogForm.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { bool } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogForm = ({\n  editing\n}) => {\n  _s();\n  const history = useNavigate();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get(`http://localhost:3009/posts/${id}`).then(res => {\n      console.log(res);\n    });\n  });\n  const onSubmit = async () => {\n    await axios.post('http://localhost:3009/posts', {\n      title: title,\n      body: body,\n      createdAt: Date.now()\n    }).then(() => {\n      history('/blogs'); // 페이지 리디렉션\n    }).catch(error => {\n      console.error('Failed to post data:', error); // 오류 처리 추가\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [editing ? 'Eidt' : 'Create', \" a blog\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: body,\n        onChange: event => setBody(event.target.value),\n        rows: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: onSubmit,\n      children: editing ? 'Edit' : 'Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogForm, \"StGBEZLs80VEXklr3obXdDwkspk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = BlogForm;\nBlogForm.propTypes = {\n  editing: bool\n};\nBlogForm.defaultProps = {\n  editing: false\n};\nexport default BlogForm;\nvar _c;\n$RefreshReg$(_c, \"BlogForm\");","map":{"version":3,"names":["useEffect","useState","axios","useNavigate","useParams","bool","jsxDEV","_jsxDEV","BlogForm","editing","_s","history","title","setTitle","body","setBody","id","get","then","res","console","log","onSubmit","post","createdAt","Date","now","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","event","target","rows","onClick","_c","propTypes","defaultProps","$RefreshReg$"],"sources":["/Users/mj/Documents/GitHub/react_blog/src/components/BlogForm.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { bool } from 'prop-types';\n\nconst BlogForm = ( {editing}) => {\n  const history = useNavigate();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const {id} = useParams();\n\n  useEffect(() => {\n    axios.get(`http://localhost:3009/posts/${id}`).then(res => {\n        console.log(res)\n    })\n  })\n\n  const onSubmit = async () => {\n    await axios\n      .post('http://localhost:3009/posts', {\n        title: title,\n        body: body,\n        createdAt: Date.now()\n      })\n      .then(() => {\n        history('/blogs'); // 페이지 리디렉션\n      })\n      .catch((error) => {\n        console.error('Failed to post data:', error); // 오류 처리 추가\n      });\n  };\n\n  return (\n    <div>\n      <h1>{editing? 'Eidt' : 'Create'} a blog</h1>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Title</label>\n        <input\n          className=\"form-control\"\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n        />\n      </div>\n      <div className=\"mb-3\">\n        <label className=\"form-label\">Body</label>\n        <textarea\n          className=\"form-control\"\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n          rows={10}\n        />\n      </div>\n      <button className=\"btn btn-primary\" onClick={onSubmit}>\n        {editing? 'Edit' : 'Post'}\n      </button>\n    </div>\n  );\n};\n\nBlogForm.propTypes = {\n    editing: bool\n}\n\nBlogForm.defaultProps = {\n    editing: false\n}\n\n\nexport default BlogForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}