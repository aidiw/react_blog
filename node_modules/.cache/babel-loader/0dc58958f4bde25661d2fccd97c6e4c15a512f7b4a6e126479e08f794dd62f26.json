{"ast":null,"code":"var _jsxFileName = \"/Users/mj/Documents/GitHub/react_blog/src/pages/ListPage.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListPage = () => {\n  _s();\n  // posts에서 state를 관리함\n  const history = useNavigate();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const getPosts = () => {\n    axios.get('http://localhost:3009/posts').then(res => {\n      setPosts(res.data);\n    });\n  };\n  useEffect(() => {\n    //state가 업데이트가 되어도 렌더링이 한번만 실행되게됨\n    getPosts();\n  }, []);\n  const deleteBlog = (e, id) => {\n    e.stopPropagation();\n    axios.delete(`http://localhost:3009/posts/${id}`).then(() => {\n      setPosts(prevPosts => prevPosts.filter(post => post.id !== id));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/blogs/create\",\n          className: \"btn btn-success\",\n          children: \"Create New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }, this) : posts.length > 0 ? posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        title: post.title,\n        onClick: () => history('/blogs/edit'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger btn-sm\",\n            onClick: e => deleteBlog(e, post.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    }) : 'No blog posts found']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(ListPage, \"JhN66KJhyCMXvrZN5pe4gRN3/rA=\", false, function () {\n  return [useNavigate];\n});\n_c = ListPage;\nexport default ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["axios","useState","useEffect","Card","Link","useNavigate","jsxDEV","_jsxDEV","ListPage","_s","history","posts","setPosts","loading","setLoading","getPosts","get","then","res","data","deleteBlog","e","id","stopPropagation","delete","prevPosts","filter","post","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","role","length","map","title","onClick","_c","$RefreshReg$"],"sources":["/Users/mj/Documents/GitHub/react_blog/src/pages/ListPage.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nconst ListPage = () => {\n    // posts에서 state를 관리함\n    const history = useNavigate();\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const getPosts = () => {\n        axios.get('http://localhost:3009/posts').then((res => {\n            setPosts(res.data);\n        }))\n    }\n\n    useEffect(() => { //state가 업데이트가 되어도 렌더링이 한번만 실행되게됨\n        getPosts();\n    }, []);\n\n    const deleteBlog = (e, id) => {\n        e.stopPropagation();\n        axios.delete(`http://localhost:3009/posts/${id}`).then(() => {\n          setPosts(prevPosts => prevPosts.filter(post => post.id !== id));\n        });\n    }\n\n   \n    \n    return (\n        <div>\n            <div className=\"d-flex justify-content-between align-content-center\">\n              <h1>Blogs</h1>\n              <div>\n                <Link to=\"/blogs/create\" className=\"btn btn-success\">\n                  Create New\n                </Link>\n              </div>\n            </div>\n            {loading? (\n              <div className=\"d-flex justify-content-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                  <span className=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n              ) : posts.length > 0 ?posts.map(post => {\n                return (\n                    <Card \n                      key={post.id} \n                      title={post.title} \n                      onClick={() => history('/blogs/edit')}>\n\n                      <div>\n                        <button \n                          className=\"btn btn-danger btn-sm\"\n                          onClick={(e) => deleteBlog(e, post.id)}\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </Card>\n                );\n            }) : 'No blog posts found'}\n        </div>\n        \n    )\n};\n\nexport default ListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}